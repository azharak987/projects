#include<iostream>
#include<time.h>
using namespace std;
int totalBankBalance = 100000;
int seaLionCost = 800;
int tigerCost = 10000;
int blackBearCost = 5000;
int adultseaLionRevenue = (0.2*seaLionCost);
int adultTigerRevenue = (0.1*tigerCost);
int adultblackBearRevenue = (0.1*blackBearCost);
float baseFoodCost = 80;
void seaLionBabyRevenue(int numberOfBabies);
void seaLionBabySickCost(int numberOfBabies);
void tigerBabyRevenue(int numberOfBabies);
void tigerBabySickCost(int numberOfBabies);
void blackBearBabyRevenue(int numberOfBabies);
void blackBearBabyCost(int numberOfBabies);
void foodCost(int seaLions,int tigers, int blackBears, float baseFoodCost );
void changeFoodCost(float );
void boomRevenue(int adultSeaLionsNumber, int babySeaLionsNumber);
int main(){
    int option;
    
    int seaLionsExtraCost = 0;
    int numberOfSealions= 0, numberOfTigers = 0, numberOfBlackBear = 0;
    seaLionBabyRevenue(1);
    cout<<"Bank Balance after 1 seaLion Baby revenue: "<<totalBankBalance<<endl;
    seaLionBabySickCost(1);
    cout<<"Bank Balance after 1 Sea Lion Baby Sick Cost: "<<totalBankBalance<<endl;
    tigerBabyRevenue(3);
    cout<<"Bank Balance after 3 Tiger Babies Revenue: "<<totalBankBalance<<endl;
    tigerBabySickCost(3);
    cout<<"Bank Balance after 3 Tiger Babies Sick Cost: "<<totalBankBalance<<endl;
    blackBearBabyRevenue(2);
    cout<<"Bank Balance after 2 black bear Babies revenue: "<<totalBankBalance<<endl;
    blackBearBabyCost(2);
    cout<<"Bank Balance after 2 Black Bear Babies Sick Cost: "<<totalBankBalance<<endl;
    foodCost(2,2,1, baseFoodCost);
    cout<<"Bank Balance after 2 SeaLions, 2 Tigers, 1 Black Bear Food Cost: "<<totalBankBalance<<endl;
    changeFoodCost(baseFoodCost);
    cout<<"Food cost after one month, random change: "<<baseFoodCost<<endl;
    boomRevenue(1, 0);
    cout<<"Bank balance after boom in attendance in zoo, revenue generated by 1 adult sea lions and 0 babies: "<<totalBankBalance<<endl;
}
void seaLionBabyRevenue(int numberOfBabies){
    int revenue = numberOfBabies*2*adultseaLionRevenue;
    totalBankBalance += revenue;
    return;
}
void seaLionBabySickCost(int numberOfBabies){
    int cost = numberOfBabies*2*adultseaLionRevenue;
    totalBankBalance -= cost;
    return;
}

void tigerBabyRevenue(int numberOfBabies){
    int revenue = numberOfBabies*2*adultTigerRevenue;
    totalBankBalance += revenue;
    return;
}
void tigerBabySickCost(int numberOfBabies){
    int cost = numberOfBabies*2*adultTigerRevenue;
    totalBankBalance -= cost;
    return;
}

void blackBearBabyRevenue(int numberOfBabies){
    int revenue = numberOfBabies*2*adultblackBearRevenue;
    totalBankBalance += revenue;
    return;
}
void blackBearBabyCost(int numberOfBabies){
    int cost = numberOfBabies*2*adultblackBearRevenue;
    totalBankBalance -= cost;
    return;
}

void foodCost(int seaLions,int tigers, int blackBears, float baseFoodCost ){
    int seaLionsFoodCost = (seaLions* baseFoodCost);
    int tigersFoodCost = (tigers*5* baseFoodCost);
    int blackBearsFoodCost = (blackBears*3*baseFoodCost);
    int totalCost = seaLionsFoodCost + tigersFoodCost + blackBearsFoodCost;
    totalBankBalance -= totalCost;
}

void changeFoodCost(float foodCost){
    srand(time(0));
    float random = rand()%41 + 80;
    cout<<"Random Percentage: "<<random<<endl;
    baseFoodCost = foodCost + (random/100)*foodCost;
}
void boomRevenue(int adultSeaLionsNumber, int babySeaLionsNumber){
    srand(time(0));
    int randomExtraRevenue = rand()%251 + 150;
    totalBankBalance += (adultseaLionRevenue * adultSeaLionsNumber)+(2*adultseaLionRevenue*babySeaLionsNumber) + randomExtraRevenue;
}

